require('dotenv').config();
const { Telegraf, Markup } = require('telegraf');

const bot = new Telegraf(process.env.BOT_TOKEN);

bot.start((ctx) => {
  ctx.reply('–ü—Ä–∏–≤–µ—Ç! –Ø —á–∞—Ç-–±–æ—Ç –Ω–∞ Node.js!');
});

bot.command('ban', async (ctx) => {
  try {
    const chatId = ctx.message.chat.id;
    const administrators = await ctx.telegram.getChatAdministrators(chatId);
    const adminCanManageChat = administrators.find((el) => el.user.id === ctx.message.from.id);

    if (adminCanManageChat?.can_manage_chat || adminCanManageChat.status === 'creator') {
      const { id, is_bot, first_name } = ctx.message.reply_to_message.from;

      if (!is_bot) {
        const isSenderAdmin = administrators.some((el) => el.user.id === ctx.message.from.id);
        if (isSenderAdmin) {
          const keyboard = Markup.inlineKeyboard([
            Markup.button.callback('‚è±Ô∏è –í—Ä–µ–º—è', 'time'),
            Markup.button.callback('ü™ô –ú–æ–Ω–µ—Ç–∫–∞', 'coin'),
          ]);

          // await ctx.telegram.banChatMember(ctx.message.chat.id, id);
          await ctx.reply(`–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${first_name}:`, keyboard);
          // ctx.reply(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${first_name} –∑–∞–±–∞–Ω–µ–Ω.`);
        }
      } else {
        ctx.reply(`–û—Ç—Å—Ç–∞–≤–∏—Ç—å –æ–≥–æ–Ω—å –ø–æ —Å–≤–æ–∏–º!`);
      }
    } else {
      ctx.reply('–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≥—Ä—É–ø–ø—ã. –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.');
      return void 0;
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
  }
});

bot.launch();
